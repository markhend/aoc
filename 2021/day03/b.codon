# Loop through all binary nums a column at a time from L to R.
# Split nums into ones and zeros lists.
# For "oxy" rating determine the most common value (0 or 1) in the current
# bit position, and keep only numbers with that bit in that position.
# If 0 and 1 are equally common, keep values with a 1 in the position
# being considered.
# "co2" rating is opposite process
# Stop if only one number is left.

f = open("input.txt")
nums = [line.strip() for line in f]


def split_nums(nums, col):
    ones, zeros = [], []
    for bits in nums:
        if bits[col] == '1':
            ones.append(bits)
        else:
            zeros.append(bits)
    return ones, zeros


ones, zeros = split_nums(nums, 0)

oxy_vals = ones.copy() if len(ones) >= len(zeros) else zeros.copy()
co2_vals = ones.copy() if len(ones) < len(zeros) else zeros.copy()

col = 1
while len(oxy_vals) > 1:
    ones, zeros = split_nums(oxy_vals, col)
    oxy_vals = ones if len(ones) >= len(zeros) else zeros
    col += 1

col = 1
while len(co2_vals) > 1:
    ones, zeros = split_nums(co2_vals, col)
    co2_vals = ones if len(ones) < len(zeros) else zeros
    col += 1

oxy = int(oxy_vals[0], 2)
co2 = int(co2_vals[0], 2)
print(oxy * co2)
